{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/lib/esm/index.js","../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/transports/webtransport.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../node_modules/socket.io-client/build/esm/url.js","../../node_modules/svelte/src/runtime/store/index.js","../../src/store.js","../../src/socket.js","../../src/SettingsManager.svelte","../../src/MapVisualization.svelte","../../src/KillmailViewer.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","// store.js\r\nimport { writable } from 'svelte/store';\r\n\r\nexport const killmails = writable([]);\r\nexport const settings = writable({});\r\n\r\nexport function clearKills() {\r\n    killmails.set([]); // Clear the killmails store\r\n  }","// socket.js\r\nimport { io } from 'socket.io-client';\r\nimport { killmails, settings } from './store';\r\n\r\n// Initialize the socket connection to your server\r\nconst socket = io('http://localhost:3000'); // Replace with your actual server URL\r\n\r\n// Handle connection and disconnection events\r\nsocket.on('connect', () => {\r\n  console.log('Connected to server with socket id:', socket.id);\r\n});\r\n\r\nsocket.on('disconnect', () => {\r\n  console.log('Disconnected from server');\r\n});\r\n\r\n// Handle initial data received from the server\r\nsocket.on('initialData', (data) => {\r\n  console.log('Received initialData:', data);\r\n  settings.set(data.settings);\r\n  killmails.set(data.killmails);\r\n});\r\n\r\n// Handle new killmails received from the server\r\nsocket.on('newKillmail', (killmail) => {\r\n  console.log('Received new killmail:', killmail);\r\n  killmails.update(currentKillmails => [...currentKillmails, killmail]);\r\n});\r\n\r\nexport default socket;\r\n","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n  import socket from './socket.js'; // Import the initialized socket instance\r\n\r\n  export let settings = {};\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let audio = new Audio('audio_files/alert.wav'); \r\n\r\n  // Function to play sound\r\n  function playSound() {\r\n    if (settings.audio_alerts_enabled) {\r\n      audio.play().catch(err => {\r\n        console.error('Error playing audio:', err);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Function to update a single setting\r\n  function updateSetting(key, value) {\r\n    const newSettings = { ...settings };\r\n    newSettings[key] = value;\r\n    dispatch('updateSettings', newSettings); // Emit event to parent component\r\n  }\r\n\r\n  // Function to update settings inside a filter list\r\n  function updateFilterList(index, key, value) {\r\n    if (settings.filter_lists) {\r\n      const newSettings = { ...settings };\r\n      newSettings.filter_lists = [...settings.filter_lists];\r\n      newSettings.filter_lists[index] = { ...newSettings.filter_lists[index] };\r\n      newSettings.filter_lists[index][key] = value;\r\n      dispatch('updateSettings', newSettings); // Emit event to parent component\r\n    }\r\n  }\r\n\r\n  // Listen for new killmails or other events where audio alerts might be triggered\r\n  socket.on('newKillmail', (data) => {\r\n    // Assuming this is where you handle new killmails\r\n    playSound();\r\n  });\r\n</script>\r\n\r\n<div class=\"settings-manager\">\r\n  <h2>Settings</h2>\r\n  {#if settings}\r\n    <label>\r\n      <input type=\"checkbox\" bind:checked={settings.dropped_value_enabled} on:change={() => updateSetting('dropped_value_enabled', settings.dropped_value_enabled)}>\r\n      Enable Dropped Value Filter\r\n    </label>\r\n    <label>\r\n      <input type=\"checkbox\" bind:checked={settings.time_threshold_enabled} on:change={() => updateSetting('time_threshold_enabled', settings.time_threshold_enabled)}>\r\n      Enable Time Threshold\r\n    </label>\r\n    <label>\r\n      Time Threshold (seconds):\r\n      <input type=\"number\" bind:value={settings.time_threshold} on:input={() => updateSetting('time_threshold', settings.time_threshold)}>\r\n    </label>\r\n    <label>\r\n      Minimum Dropped Value:\r\n      <input type=\"number\" bind:value={settings.dropped_value} on:input={() => updateSetting('dropped_value', settings.dropped_value)}>\r\n    </label>\r\n    <label>\r\n      <input type=\"checkbox\" bind:checked={settings.audio_alerts_enabled} on:change={() => updateSetting('audio_alerts_enabled', settings.audio_alerts_enabled)}>\r\n      Enable Audio Alerts\r\n    </label>\r\n    <label>\r\n      <input type=\"checkbox\" bind:checked={settings.npc_only} on:change={() => updateSetting('npc_only', settings.npc_only)}>\r\n      NPC Only\r\n    </label>\r\n    <label>\r\n      <input type=\"checkbox\" bind:checked={settings.solo} on:change={() => updateSetting('solo', settings.solo)}>\r\n      Solo Only\r\n    </label>\r\n    <label>\r\n      <input type=\"checkbox\" bind:checked={settings.triangulation_check} on:change={() => updateSetting('triangulation_check', settings.triangulation_check)}>\r\n      Triangulation Check\r\n    </label>\r\n\r\n    <h3>Filter Lists</h3>\r\n    {#if settings.filter_lists}\r\n      {#each settings.filter_lists as filter, index}\r\n        <div class=\"filter-list\">\r\n          <h4>{filter.file}</h4>\r\n          <label>\r\n            <input type=\"checkbox\" bind:checked={filter.enabled} on:change={() => updateFilterList(index, 'enabled', filter.enabled)}>\r\n            Enabled\r\n          </label>\r\n          <label>\r\n            Color:\r\n            <input type=\"text\" bind:value={filter.color} on:input={() => updateFilterList(index, 'color', filter.color)}>\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" bind:checked={filter.webhook} on:change={() => updateFilterList(index, 'webhook', filter.webhook)}>\r\n            Webhook\r\n          </label>\r\n          <label>\r\n            Sound:\r\n            <input type=\"text\" bind:value={filter.sound} on:input={() => updateFilterList(index, 'sound', filter.sound)}>\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" bind:checked={filter.ignore_dropped_value} on:change={() => updateFilterList(index, 'ignore_dropped_value', filter.ignore_dropped_value)}>\r\n            Ignore Dropped Value\r\n          </label>\r\n          <label>\r\n            List Check ID:\r\n            <input type=\"text\" bind:value={filter.list_check_id} on:input={() => updateFilterList(index, 'list_check_id', filter.list_check_id)}>\r\n          </label>\r\n        </div>\r\n      {/each}\r\n    {/if}\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .settings-manager {\r\n    margin-top: 20px;\r\n    text-align: left;\r\n  }\r\n\r\n  label {\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  input[type=\"number\"], input[type=\"text\"] {\r\n    width: 100px;\r\n  }\r\n\r\n  .filter-list {\r\n    margin-bottom: 20px;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n</style>\r\n","<script>\r\n  import { onMount } from 'svelte';\r\n  import * as THREE from 'three';\r\n  import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\n  export let killmailId;\r\n\r\n  let container;\r\n\r\n  // Function to fetch celestial data based on the killmail ID\r\n  async function fetchCelestials(killmailId) {\r\n    const response = await fetch(`/api/celestials/${killmailId}`);\r\n    return await response.json();\r\n  }\r\n\r\n  // Function to initialize the Three.js scene and add objects\r\n  function initVisualization(celestials) {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, container.clientWidth / container.clientHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer();\r\n\r\n    renderer.setSize(container.clientWidth, container.clientHeight);\r\n    container.appendChild(renderer.domElement);\r\n\r\n    // Initialize OrbitControls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n    // Add celestials to the scene\r\n    celestials.forEach(celestial => {\r\n      const geometry = new THREE.SphereGeometry(0.1, 32, 32);\r\n      const material = new THREE.MeshBasicMaterial({ color: 0x0000ff });\r\n      const sphere = new THREE.Mesh(geometry, material);\r\n      sphere.position.set(celestial.x, celestial.y, celestial.z);\r\n      scene.add(sphere);\r\n    });\r\n\r\n    // Add the killmail position marker\r\n    const killmailGeometry = new THREE.SphereGeometry(0.2, 32, 32);\r\n    const killmailMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\n    const killmailSphere = new THREE.Mesh(killmailGeometry, killmailMaterial);\r\n    killmailSphere.position.set(celestials[0].killmail_x, celestials[0].killmail_y, celestials[0].killmail_z);\r\n    scene.add(killmailSphere);\r\n\r\n    // Set initial camera position\r\n    camera.position.z = 5;\r\n\r\n    // Animation loop to render the scene and update controls\r\n    function animate() {\r\n      requestAnimationFrame(animate);\r\n      controls.update(); // Update controls on each frame\r\n      renderer.render(scene, camera);\r\n    }\r\n    animate();\r\n  }\r\n\r\n  // Fetch data and initialize the visualization on component mount\r\n  onMount(async () => {\r\n    const celestials = await fetchCelestials(killmailId);\r\n    initVisualization(celestials);\r\n  });\r\n</script>\r\n\r\n<!-- Container for the Three.js canvas -->\r\n<div bind:this={container} style=\"width: 100%; height: 400px;\"></div>\r\n","<script>\r\n  import { killmails } from './store';\r\n  import MapVisualization from './MapVisualization.svelte';\r\n\r\n  let selectedKillmailId = null;\r\n\r\n  // Subscribe to the killmails store\r\n  let kills = [];\r\n  $: kills = $killmails;\r\n\r\n  function viewMap(killID) {\r\n    selectedKillmailId = killID;\r\n  }\r\n\r\n  function formatDroppedValue(value) {\r\n    if (isNaN(value) || value === null || value === undefined) return '0';\r\n    const magnitude = Math.floor(Math.log10(value) / 3);\r\n    const scaled = value / Math.pow(1000, magnitude);\r\n    return scaled.toFixed(2) + ['', 'K', 'M', 'B', 'T'][magnitude];\r\n  }\r\n\r\n  function calculateTimeDifference(killmailTime) {\r\n    const now = new Date();\r\n    const killTime = new Date(killmailTime);\r\n    const diff = now - killTime;\r\n    const seconds = Math.floor(diff / 1000);\r\n    if (seconds < 60) return `${seconds} seconds ago`;\r\n    if (seconds < 3600) return `${Math.floor(seconds / 60)} minutes ago`;\r\n    if (seconds < 86400) return `${Math.floor(seconds / 3600)} hours ago`;\r\n    return `${Math.floor(seconds / 86400)} days ago`;\r\n  }\r\n</script>\r\n\r\n<div class=\"killmail-viewer\">\r\n  <div class=\"scroll-box\">\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Dropped Value</th>\r\n          <th>Occurred</th>\r\n          <th>URL</th>\r\n          <th>Map</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {#each kills as killmail}\r\n          <tr>\r\n            <td>{formatDroppedValue(killmail.zkb.droppedValue)}</td>\r\n            <td>{calculateTimeDifference(killmail.killmail.killmail_time)}</td>\r\n            <td><a href={`https://zkillboard.com/kill/${killmail.killID}/`} target=\"_blank\">View</a></td>\r\n            <td><button on:click={() => viewMap(killmail.killID)}>Map</button></td>\r\n          </tr>\r\n        {/each}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  {#if selectedKillmailId}\r\n    <MapVisualization killmailId={selectedKillmailId} />\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .killmail-viewer {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .scroll-box {\r\n    height: 400px; /* Fixed height */\r\n    overflow-y: auto; /* Scroll vertically if content overflows */\r\n    border: 1px solid #ddd; /* Optional: adds a border around the scrollable area */\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n\r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n</style>\r\n","<script>\r\n  import socket from './socket.js'; // socket.js will handle the socket connection and event listening\r\n  import { onMount } from 'svelte';\r\n  import SettingsManager from './SettingsManager.svelte';\r\n  import KillmailViewer from './KillmailViewer.svelte';\r\n  import { clearKills } from './store.js';\r\n  import Login from './Login.svelte';\r\n\r\n  import { killmails, settings } from './store'; // Import the stores\r\n\r\n  let loggedIn = false;\r\n  let username = '';\r\n  let password = '';\r\n\r\n  // Subscribe to stores\r\n  let userSettings = {};\r\n  let kills = [];\r\n\r\n  $: kills = $killmails;\r\n  $: userSettings = $settings;\r\n\r\n  function clearAllKills() {\r\n    clearKills(); // Clear kills from the store\r\n    if (socket) {\r\n      socket.emit('clearKills'); // Notify the server to clear kills in memory\r\n    } else {\r\n      console.error('Socket is not initialized');\r\n    }\r\n  }\r\n\r\n  function handleLogin(event) {\r\n    username = event.detail.username;\r\n    password = event.detail.password;\r\n    loggedIn = true;\r\n\r\n    if (socket) {\r\n      socket.emit('login', { username, password });\r\n    } else {\r\n      console.error('Socket is not initialized');\r\n    }\r\n  }\r\n\r\n  function updateSettings(event) {\r\n    const newSettings = event.detail;\r\n    if (socket) {\r\n      socket.emit('updateSettings', newSettings);\r\n    } else {\r\n      console.error('Socket is not initialized');\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    if (!socket) {\r\n      console.error('Socket is not initialized on mount');\r\n    }\r\n\r\n    // Note: Socket events are handled centrally in socket.js, so no need to handle them here\r\n  });\r\n</script>\r\n\r\n{#if !loggedIn}\r\n  <div class=\"login-form\">\r\n    <label>\r\n      Username:\r\n      <input type=\"text\" bind:value={username} />\r\n    </label>\r\n    <label>\r\n      Password:\r\n      <input type=\"password\" bind:value={password} />\r\n    </label>\r\n    <button on:click={() => handleLogin({ detail: { username, password } })}>Login</button>\r\n  </div>\r\n{:else}\r\n  <KillmailViewer {kills}/>\r\n  <button on:click={clearAllKills}>Clear All Kills</button>\r\n  <SettingsManager on:updateSettings={updateSettings} {settings} />\r\n{/if}\r\n\r\n<head>\r\n  <link rel=\"stylesheet\" href=\"/global.css\">\r\n  <link rel=\"stylesheet\" href=\"build/public/build/bundle.css\"> \r\n  <script src=\"/build/bundle.js\"></script>\r\n</head>\r\n\r\n<style>\r\n  .login-form {\r\n    margin: 20px;\r\n  }\r\n  label {\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n  button {\r\n    padding: 5px 10px;\r\n  }\r\n</style>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n  target: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","undefined","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","current_component","set_current_component","createEventDispatcher","Error","get_current_component","type","detail","cancelable","bubbles","CustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","ensure_array_like","array_like_or_iterator","Array","from","create_component","mount_component","m","new_on_destroy","on_mount","map","filter","destroy_component","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","this","$on","index","splice","$set","obj","keys","window","__svelte","v","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","Blob","prototype","toString","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","Emitter","mixin","on","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","cb","emit","args","emitReserved","listeners","hasListeners","globalThisShim","self","Function","pick","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","constructor","reason","description","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","prev","seed","num","Math","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","concat","join","hasXHR2","responseType","Request","uri","method","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","replace","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","utf8Length","ceil","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","Socket$1","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","isObject","Decoder","reviver","reconstructor","decodeString","isBinaryEvent","BINARY_EVENT","BINARY_ACK","EVENT","ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","subscriber_queue","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","killmails","settings","if_block","filter_lists","create_if_block_1","label0","input0","checked","dropped_value_enabled","label1","input1","time_threshold_enabled","label2","input2","time_threshold","label3","input3","dropped_value","label4","input4","audio_alerts_enabled","label5","input5","npc_only","label6","input6","solo","label7","input7","triangulation_check","h3","each_value","t0_value","file","div","h4","enabled","color","webhook","sound","ignore_dropped_value","list_check_id","t0","create_if_block","h2","$$props","dispatch","audio","Audio","updateSetting","newSettings","updateFilterList","play","console","log","killmail","currentKillmails","container","killmailId","$$value","formatDroppedValue","zkb","droppedValue","t2_value","calculateTimeDifference","killmail_time","a_href_value","killID","tr","td0","td1","td2","td3","button","t2","div1","div0","table","thead","tbody","isNaN","magnitude","log10","toFixed","killmailTime","diff","seconds","selectedKillmailId","kills","viewMap","$$invalidate","$killmails","head","loggedIn","username","password","handleLogin","body"],"mappings":"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"}