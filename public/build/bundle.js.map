{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/lib/esm/index.js","../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/transports/webtransport.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../node_modules/socket.io-client/build/esm/url.js","../../node_modules/svelte/src/runtime/store/index.js","../../src/store.js","../../src/socket.js","../../src/FilterListManager.svelte","../../src/ProfileListManager.svelte","../../src/SettingsManager.svelte","../../src/MapVisualization.svelte","../../src/KillmailViewer.svelte","../../src/Login.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { writable, derived } from \"svelte/store\";\r\n\r\nexport const killmails = writable([]);\r\nexport const settings = writable({});\r\nexport const filterLists = writable([]);\r\nexport const profiles = writable([]);\r\n\r\nexport const filteredKillmails = derived(\r\n  [killmails, settings, filterLists],\r\n  ([$killmails, $settings, $filterLists]) => {\r\n    return $killmails.filter((killmail) => {\r\n      // Apply filter lists\r\n      for (let list of $filterLists) {\r\n        if (!list.enabled) continue; // Skip disabled filter lists\r\n\r\n        const ids = Array.isArray(list.ids) ? list.ids : JSON.parse(list.ids);\r\n        let match = false;\r\n\r\n        switch (list.filter_type) {\r\n          case \"attacker_alliance\":\r\n            match = killmail.killmail.attackers.some((attacker) =>\r\n              ids.includes(attacker.alliance_id?.toString())\r\n            );\r\n            break;\r\n          case \"attacker_corporation\":\r\n            match = killmail.killmail.attackers.some((attacker) =>\r\n              ids.includes(attacker.corporation_id?.toString())\r\n            );\r\n            break;\r\n          case \"attacker_ship_type\":\r\n            match = killmail.killmail.attackers.some((attacker) =>\r\n              ids.includes(attacker.ship_type_id?.toString())\r\n            );\r\n            break;\r\n          case \"victim_alliance\":\r\n            match = ids.includes(\r\n              killmail.killmail.victim.alliance_id?.toString()\r\n            );\r\n            break;\r\n          case \"victim_corporation\":\r\n            match = ids.includes(\r\n              killmail.killmail.victim.corporation_id?.toString()\r\n            );\r\n            break;\r\n          case \"ship_type\":\r\n            match = ids.includes(\r\n              killmail.killmail.victim.ship_type_id?.toString()\r\n            );\r\n            break;\r\n          case \"solar_system\":\r\n            match = ids.includes(killmail.killmail.solar_system_id?.toString());\r\n            break;\r\n        }\r\n\r\n        if (list.is_exclude && match) return false;\r\n        if (!list.is_exclude && !match) return false;\r\n      }\r\n\r\n      // Dropped Value Filter\r\n      if (\r\n        $settings.dropped_value_enabled &&\r\n        killmail.zkb.droppedValue < $settings.dropped_value\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Total Value Filter\r\n      if (\r\n        $settings.total_value_enabled &&\r\n        killmail.zkb.totalValue < $settings.total_value\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Points Filter\r\n      if ($settings.points_enabled && killmail.zkb.points < $settings.points) {\r\n        return false;\r\n      }\r\n\r\n      // NPC Only Filter\r\n      if ($settings.npc_only && !killmail.zkb.npc) {\r\n        return false;\r\n      }\r\n\r\n      // Solo Only Filter\r\n      if ($settings.solo && !killmail.zkb.solo) {\r\n        return false;\r\n      }\r\n\r\n      // AWOX Only Filter\r\n      if ($settings.awox_only && !killmail.zkb.awox) {\r\n        return false;\r\n      }\r\n\r\n      // Location Filter\r\n      if (\r\n        $settings.location_filter_enabled &&\r\n        $settings.location_filter &&\r\n        killmail.zkb.locationID !== parseInt($settings.location_filter)\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Ship Type Filter\r\n      if (\r\n        $settings.ship_type_filter_enabled &&\r\n        killmail.killmail.victim.ship_type_id !== $settings.ship_type_filter\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Time Threshold Filter\r\n      if ($settings.time_threshold_enabled) {\r\n        const killTime = new Date(killmail.killmail.killmail_time).getTime();\r\n        const currentTime = new Date().getTime();\r\n        const timeDiff = (currentTime - killTime) / 1000; // Convert to seconds\r\n        if (timeDiff > $settings.time_threshold) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // Attacker Alliance Filter\r\n      if (\r\n        $settings.attacker_alliance_filter_enabled &&\r\n        $settings.attacker_alliance_filter &&\r\n        !killmail.killmail.attackers.some(\r\n          (attacker) =>\r\n            attacker.alliance_id ===\r\n            parseInt($settings.attacker_alliance_filter)\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Attacker Corporation Filter\r\n      if (\r\n        $settings.attacker_corporation_filter_enabled &&\r\n        $settings.attacker_corporation_filter &&\r\n        !killmail.killmail.attackers.some(\r\n          (attacker) =>\r\n            attacker.corporation_id ===\r\n            parseInt($settings.attacker_corporation_filter)\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Attacker Ship Type Filter\r\n      if (\r\n        $settings.attacker_ship_type_filter_enabled &&\r\n        $settings.attacker_ship_type_filter &&\r\n        !killmail.killmail.attackers.some(\r\n          (attacker) =>\r\n            attacker.ship_type_id ===\r\n            parseInt($settings.attacker_ship_type_filter)\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Victim Alliance Filter\r\n      if (\r\n        $settings.victim_alliance_filter_enabled &&\r\n        $settings.victim_alliance_filter &&\r\n        killmail.killmail.victim.alliance_id !==\r\n          parseInt($settings.victim_alliance_filter)\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Victim Corporation Filter\r\n      if (\r\n        $settings.victim_corporation_filter_enabled &&\r\n        $settings.victim_corporation_filter &&\r\n        killmail.killmail.victim.corporation_id !==\r\n          parseInt($settings.victim_corporation_filter)\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Item Type Filter\r\n      if (\r\n        $settings.item_type_filter_enabled &&\r\n        $settings.item_type_filter &&\r\n        !killmail.killmail.victim.items.some(\r\n          (item) => item.item_type_id === parseInt($settings.item_type_filter)\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Solar System Filter\r\n      if (\r\n        $settings.solar_system_filter_enabled &&\r\n        $settings.solar_system_filter &&\r\n        killmail.killmail.solar_system_id !==\r\n          parseInt($settings.solar_system_filter)\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // If all filters pass, include the killmail\r\n      return true;\r\n    });\r\n  }\r\n);\r\n\r\nexport function clearKills() {\r\n  killmails.set([]);\r\n}\r\n\r\nexport function addFilterList(list) {\r\n  filterLists.update((lists) => [...lists, list]);\r\n}\r\n\r\nexport function updateFilterList(updatedList) {\r\n  filterLists.update((lists) =>\r\n    lists.map((list) => (list.id === updatedList.id ? updatedList : list))\r\n  );\r\n}\r\n\r\nexport function deleteFilterList(id) {\r\n  filterLists.update((lists) => lists.filter((list) => list.id !== id));\r\n}\r\n\r\nexport function addProfile(profile) {\r\n  profiles.update((profs) => [...profs, profile]);\r\n}\r\n\r\nexport function updateProfile(updatedProfile) {\r\n  profiles.update((profs) =>\r\n    profs.map((prof) => (prof.id === updatedProfile.id ? updatedProfile : prof))\r\n  );\r\n}\r\n\r\nexport function deleteProfile(id) {\r\n  profiles.update((profs) => profs.filter((prof) => prof.id !== id));\r\n}\r\n","// socket.js\r\nimport { io } from 'socket.io-client';\r\nimport { killmails, settings, filterLists, addFilterList } from './store';\r\n\r\n// Initialize the socket connection to your server\r\nconst socket = io('http://localhost:3000'); // Replace with your actual server URL\r\n\r\n// Handle connection and disconnection events\r\nsocket.on('connect', () => {\r\n  console.log('Connected to server with socket id:', socket.id);\r\n});\r\n\r\nsocket.on('disconnect', () => {\r\n  console.log('Disconnected from server');\r\n});\r\n\r\n// Handle initial data received from the server\r\nsocket.on('initialData', (data) => {\r\n  console.log('Received initialData:', data);\r\n  settings.set(data.settings);\r\n  killmails.set(data.killmails);\r\n  filterLists.set(data.filterLists);\r\n});\r\n\r\nlet audio = new Audio('audio_files/alert.wav'); \r\n\r\n// Function to play sound for new killmails\r\nfunction playSound() {\r\n  let audioAlertEnabled;\r\n  settings.subscribe(value => {\r\n    audioAlertEnabled = value.audio_alerts_enabled; // Get the current value of audio_alerts_enabled\r\n  });\r\n\r\n  if (audioAlertEnabled) {\r\n    audio.play().catch(err => {\r\n      console.error('Error playing audio:', err);\r\n    });\r\n  }\r\n}\r\n\r\n// Handle filter list creation response\r\nsocket.on('filterListCreated', (newFilterList) => {\r\n  console.log('New filter list created:', newFilterList);\r\n  addFilterList(newFilterList);\r\n});\r\n\r\n// Handle new killmails received from the server\r\nsocket.on('newKillmail', (killmail) => {\r\n  console.log('Received new killmail:', killmail);\r\n  killmails.update(currentKillmails => [...currentKillmails, killmail]); // Update killmails store\r\n  playSound();\r\n});\r\n\r\n// Handle profile saved response\r\nsocket.on('profileSaved', (profile) => {\r\n  console.log('Profile saved:', profile);\r\n  // You might want to update a profiles store here if you create one\r\n});\r\n\r\n// Handle profile loaded response\r\nsocket.on('profileLoaded', (loadedSettings) => {\r\n  console.log('Profile loaded:', loadedSettings);\r\n  settings.set(loadedSettings);\r\n});\r\n\r\nexport default socket;","<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import socket from \"./socket.js\";\r\n  import { filterLists } from \"./store\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  $: localFilterLists = $filterLists;\r\n  $: {\r\n    console.log(\"Updated local filter lists:\", localFilterLists);\r\n  }\r\n\r\n  let localFilterLists = [];\r\n\r\n  filterLists.subscribe((value) => {\r\n    localFilterLists = value;\r\n    console.log(\"Updated local filter lists:\", localFilterLists);\r\n  });\r\n\r\n  function toggleFilterList(id) {\r\n    filterLists.update((lists) =>\r\n      lists.map((list) =>\r\n        list.id === id ? { ...list, enabled: !list.enabled } : list\r\n      )\r\n    );\r\n    updateFilterList(id);\r\n  }\r\n\r\n  function toggleExclude(id) {\r\n    filterLists.update((lists) =>\r\n      lists.map((list) =>\r\n        list.id === id ? { ...list, is_exclude: !list.is_exclude } : list\r\n      )\r\n    );\r\n    updateFilterList(id);\r\n  }\r\n\r\n  function updateFilterList(id) {\r\n    const list = $filterLists.find((l) => l.id === id);\r\n    if (list) {\r\n      console.log(\"Updating filter list:\", list);\r\n      socket.emit(\"updateFilterList\", list);\r\n      dispatch(\"updateFilterLists\", { filterLists: $filterLists });\r\n    }\r\n  }\r\n\r\n  function deleteFilterList(id) {\r\n    console.log(\"Deleting filter list:\", id);\r\n    socket.emit(\"deleteFilterList\", { id });\r\n    filterLists.update((lists) => lists.filter((list) => list.id !== id));\r\n    dispatch(\"updateFilterLists\", { filterLists: $filterLists });\r\n  }\r\n</script>\r\n\r\n<div class=\"filter-list-manager\">\r\n  <h2>Filter Lists</h2>\r\n  {#if localFilterLists.length === 0}\r\n    <p>No filter lists created yet. Create one to get started!</p>\r\n  {:else}\r\n    {#each localFilterLists as list (list.id)}\r\n      <div class=\"filter-list-item\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id={`filter-list-${list.id}`}\r\n          checked={list.enabled}\r\n          on:change={() => toggleFilterList(list.id)}\r\n        />\r\n        <label for={`filter-list-${list.id}`}>\r\n          {list.name} ({list.filter_type || \"No type\"})\r\n        </label>\r\n        <select\r\n          value={list.is_exclude ? \"exclude\" : \"include\"}\r\n          on:change={() => toggleExclude(list.id)}\r\n        >\r\n          <option value=\"include\">Include</option>\r\n          <option value=\"exclude\">Exclude</option>\r\n        </select>\r\n        <button on:click={() => deleteFilterList(list.id)}>Delete</button>\r\n      </div>\r\n    {/each}\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .filter-list-manager {\r\n    margin-top: 20px;\r\n    padding: 15px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .filter-list-item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .filter-list-item label {\r\n    margin-left: 10px;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  select,\r\n  button {\r\n    margin-left: 10px;\r\n  }\r\n</style>\r\n","<script>\r\n  import { createEventDispatcher, afterUpdate } from \"svelte\";\r\n  import { profiles as profilesStore } from \"./store.js\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let profiles = [];\r\n  export let selectedProfile = null;\r\n\r\n  let newProfileName = \"\";\r\n\r\n  $: {\r\n    console.log(\"ProfileListManager.svelte - profiles updated:\", profiles);\r\n  }\r\n\r\n  afterUpdate(() => {\r\n    console.log(\"ProfileListManager.svelte - afterUpdate. Profiles:\", profiles);\r\n  });\r\n\r\n  function saveProfile() {\r\n    if (newProfileName) {\r\n      dispatch(\"saveProfile\", { name: newProfileName });\r\n      newProfileName = \"\"; // Clear the input after saving\r\n    } else {\r\n      console.log(\"No profile name provided\");\r\n    }\r\n  }\r\n\r\n  function loadProfile() {\r\n    if (selectedProfile) {\r\n      dispatch(\"loadProfile\", selectedProfile);\r\n    }\r\n  }\r\n\r\n  function deleteProfile() {\r\n    if (selectedProfile) {\r\n      console.log(\"ProfileListManager: Deleting profile:\", selectedProfile);\r\n      dispatch(\"deleteProfile\", { id: selectedProfile });\r\n      selectedProfile = null; // Reset selection after delete\r\n    } else {\r\n      console.log(\"ProfileListManager: No profile selected for deletion\");\r\n    }\r\n  }\r\n\r\n  function handleDropdownClick() {\r\n    dispatch(\"fetchProfiles\");\r\n  }\r\n</script>\r\n\r\n<div class=\"profile-list-manager\">\r\n  <h2>Profiles</h2>\r\n  <div class=\"profile-controls\">\r\n    <select bind:value={selectedProfile} on:click={handleDropdownClick}>\r\n      <option value={null}>Select a profile</option>\r\n      {#each profiles as profile (profile.id)}\r\n        <option value={profile.id}>{profile.name}</option>\r\n      {/each}\r\n    </select>\r\n    <button on:click={loadProfile}>Load</button>\r\n    <button on:click={deleteProfile}>Delete</button>\r\n  </div>\r\n  <div class=\"new-profile\">\r\n    <input bind:value={newProfileName} placeholder=\"New profile name\" />\r\n    <button on:click={saveProfile}>Save New Profile</button>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .profile-list-manager {\r\n    margin-top: 20px;\r\n    padding: 15px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .profile-controls {\r\n    display: flex;\r\n    gap: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .profile-controls select {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  .new-profile {\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n\r\n  .new-profile input {\r\n    flex-grow: 1;\r\n  }\r\n</style>\r\n","<script>\r\n  import { createEventDispatcher, onMount, afterUpdate } from \"svelte\";\r\n  import { settings, filterLists, profiles } from \"./store\";\r\n  import FilterListManager from \"./FilterListManager.svelte\";\r\n  import ProfileListManager from \"./ProfileListManager.svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let socket;\r\n\r\n  let newListName = \"\";\r\n  let newListIds = \"\";\r\n  let newListIsExclude = false;\r\n  let newListFilterType = \"\";\r\n  let selectedProfile = null;\r\n\r\n  $: localSettings = $settings;\r\n  $: localFilterLists = $filterLists;\r\n  $: localProfiles = $profiles;\r\n\r\n  $: {\r\n    console.log(\r\n      \"SettingsManager.svelte - localProfiles updated:\",\r\n      localProfiles\r\n    );\r\n  }\r\n\r\n  onMount(() => {\r\n    console.log(\"SettingsManager.svelte - onMount. Fetching initial profiles.\");\r\n    fetchProfiles();\r\n  });\r\n\r\n  afterUpdate(() => {\r\n    console.log(\r\n      \"SettingsManager.svelte - afterUpdate. Profiles:\",\r\n      localProfiles\r\n    );\r\n  });\r\n\r\n  function updateSetting(key, value) {\r\n    settings.update((s) => ({ ...s, [key]: value }));\r\n    socket.emit(\"updateSettings\", $settings);\r\n  }\r\n\r\n  function createFilterList() {\r\n    const ids = newListIds.split(\",\").map((id) => id.trim());\r\n    const newList = {\r\n      name: newListName,\r\n      ids,\r\n      enabled: false,\r\n      is_exclude: newListIsExclude,\r\n      filter_type: newListFilterType,\r\n    };\r\n    console.log(\"Creating new filter list:\", newList);\r\n    socket.emit(\"createFilterList\", newList);\r\n    newListName = newListIds = \"\";\r\n    newListIsExclude = false;\r\n    newListFilterType = \"\";\r\n  }\r\n\r\n  function handleFilterListsUpdate(event) {\r\n    filterLists.set(event.detail.filterLists);\r\n    socket.emit(\"updateFilterLists\", $filterLists);\r\n  }\r\n\r\n  function saveProfile(event) {\r\n    const { name } = event.detail;\r\n    if (name) {\r\n      const profileData = {\r\n        name,\r\n        settings: $settings,\r\n        filterLists: $filterLists,\r\n      };\r\n      console.log(\"Sending profile data:\", profileData);\r\n      socket.emit(\"saveProfile\", profileData);\r\n    } else {\r\n      console.log(\"No profile name provided\");\r\n    }\r\n  }\r\n\r\n  function loadProfile(event) {\r\n    const profileId = event.detail;\r\n    if (profileId) {\r\n      socket.emit(\"loadProfile\", profileId);\r\n    }\r\n  }\r\n\r\n  function deleteProfile(event) {\r\n    const { id } = event.detail;\r\n    console.log(\"SettingsManager: Deleting profile:\", id);\r\n    socket.emit(\"deleteProfile\", { id });\r\n  }\r\n\r\n  function fetchProfiles() {\r\n    console.log(\"Fetching profiles from database\");\r\n    socket.emit(\"fetchProfiles\");\r\n  }\r\n\r\n  socket.on(\"initialData\", (data) => {\r\n    console.log(\"Received initial data, fetching profiles\");\r\n    fetchProfiles();\r\n  });\r\n\r\n  socket.on(\"profileSaved\", (profile) => {\r\n    console.log(\"Profile saved event received:\", profile);\r\n    profiles.update((profs) => {\r\n      const existingIndex = profs.findIndex((p) => p.id === profile.id);\r\n      if (existingIndex !== -1) {\r\n        profs[existingIndex] = profile;\r\n      } else {\r\n        profs = [...profs, profile];\r\n      }\r\n      return profs;\r\n    });\r\n    selectedProfile = profile.id;\r\n    fetchProfiles(); // Fetch updated list of profiles\r\n  });\r\n\r\n  socket.on(\"profileLoaded\", (data) => {\r\n    console.log(\"Profile loaded:\", data);\r\n\r\n    // Update settings\r\n    settings.update((currentSettings) => ({\r\n      ...currentSettings,\r\n      ...data.settings,\r\n    }));\r\n\r\n    // Update filter lists\r\n    filterLists.update((currentLists) => {\r\n      // Remove any lists that no longer exist\r\n      const validLists = currentLists.filter((list) =>\r\n        data.filterLists.some((newList) => newList.id === list.id)\r\n      );\r\n\r\n      // Add or update lists from the loaded profile\r\n      data.filterLists.forEach((newList) => {\r\n        const index = validLists.findIndex((list) => list.id === newList.id);\r\n        if (index !== -1) {\r\n          validLists[index] = { ...validLists[index], ...newList };\r\n        } else {\r\n          validLists.push(newList);\r\n        }\r\n      });\r\n\r\n      return validLists;\r\n    });\r\n\r\n    console.log(\"Profile loaded successfully\");\r\n    // You might want to add a UI notification here\r\n  });\r\n\r\n  socket.on(\"profilesFetched\", (fetchedProfiles) => {\r\n    console.log(\"Profiles fetched from database:\", fetchedProfiles);\r\n    profiles.set(fetchedProfiles);\r\n  });\r\n\r\n  socket.on(\"profileDeleted\", (deletedId) => {\r\n    console.log(\"SettingsManager: Profile deleted:\", deletedId);\r\n    profiles.update((profs) => {\r\n      const updatedProfs = profs.filter((p) => p.id !== deletedId);\r\n      console.log(\"SettingsManager: Updated profiles:\", updatedProfs);\r\n      return updatedProfs;\r\n    });\r\n    if (selectedProfile === deletedId) {\r\n      selectedProfile = null;\r\n    }\r\n    fetchProfiles(); // Fetch updated list of profiles\r\n  });\r\n\r\n  socket.on(\"filterListCreated\", (newList) => {\r\n    console.log(\"Received new filter list:\", newList);\r\n    filterLists.update((lists) => {\r\n      const existingIndex = lists.findIndex((list) => list.id === newList.id);\r\n      if (existingIndex !== -1) {\r\n        lists[existingIndex] = newList;\r\n        return [...lists];\r\n      } else {\r\n        return [...lists, newList];\r\n      }\r\n    });\r\n  });\r\n</script>\r\n\r\n<div class=\"settings-manager\">\r\n  <h2>Settings</h2>\r\n\r\n  <ProfileListManager\r\n    profiles={localProfiles}\r\n    bind:selectedProfile\r\n    on:saveProfile={saveProfile}\r\n    on:loadProfile={loadProfile}\r\n    on:fetchProfiles={fetchProfiles}\r\n    on:deleteProfile={deleteProfile}\r\n  />\r\n\r\n  {#if localSettings}\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.dropped_value_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"dropped_value_enabled\",\r\n            localSettings.dropped_value_enabled\r\n          )}\r\n      />\r\n      Enable Dropped Value Filter\r\n    </label>\r\n    <label>\r\n      Minimum Dropped Value:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.dropped_value}\r\n        on:input={() =>\r\n          updateSetting(\"dropped_value\", localSettings.dropped_value)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.total_value_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"total_value_enabled\",\r\n            localSettings.total_value_enabled\r\n          )}\r\n      />\r\n      Enable Total Value Filter\r\n    </label>\r\n\r\n    <h3>Item Filter</h3>\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.item_type_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"item_type_filter_enabled\",\r\n            localSettings.item_type_filter_enabled\r\n          )}\r\n      />\r\n      Enable Item Type Filter\r\n    </label>\r\n    <label>\r\n      Item Type ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.item_type_filter}\r\n        on:input={() =>\r\n          updateSetting(\"item_type_filter\", localSettings.item_type_filter)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      Minimum Total Value:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.total_value}\r\n        on:input={() => updateSetting(\"total_value\", localSettings.total_value)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.points_enabled}\r\n        on:change={() =>\r\n          updateSetting(\"points_enabled\", localSettings.points_enabled)}\r\n      />\r\n      Enable Points Filter\r\n    </label>\r\n    <label>\r\n      Minimum Points:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.points}\r\n        on:input={() => updateSetting(\"points\", localSettings.points)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.npc_only}\r\n        on:change={() => updateSetting(\"npc_only\", localSettings.npc_only)}\r\n      />\r\n      NPC Only\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.solo}\r\n        on:change={() => updateSetting(\"solo\", localSettings.solo)}\r\n      />\r\n      Solo Only\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.awox_only}\r\n        on:change={() => updateSetting(\"awox_only\", localSettings.awox_only)}\r\n      />\r\n      AWOX Only\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.location_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"location_filter_enabled\",\r\n            localSettings.location_filter_enabled\r\n          )}\r\n      />\r\n      Enable Location Filter\r\n    </label>\r\n    <label>\r\n      Location ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.location_filter}\r\n        on:input={() =>\r\n          updateSetting(\"location_filter\", localSettings.location_filter)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.ship_type_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"ship_type_filter_enabled\",\r\n            localSettings.ship_type_filter_enabled\r\n          )}\r\n      />\r\n      Enable Ship Type Filter\r\n    </label>\r\n    <label>\r\n      Ship Type ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.ship_type_filter}\r\n        on:input={() =>\r\n          updateSetting(\"ship_type_filter\", localSettings.ship_type_filter)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.time_threshold_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"time_threshold_enabled\",\r\n            localSettings.time_threshold_enabled\r\n          )}\r\n      />\r\n      Enable Time Threshold\r\n    </label>\r\n    <label>\r\n      Time Threshold (seconds):\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.time_threshold}\r\n        on:input={() =>\r\n          updateSetting(\"time_threshold\", localSettings.time_threshold)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.audio_alerts_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"audio_alerts_enabled\",\r\n            localSettings.audio_alerts_enabled\r\n          )}\r\n      />\r\n      Enable Audio Alerts\r\n    </label>\r\n\r\n    <h3>Attacker Filters</h3>\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.attacker_alliance_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"attacker_alliance_filter_enabled\",\r\n            localSettings.attacker_alliance_filter_enabled\r\n          )}\r\n      />\r\n      Enable Attacker Alliance Filter\r\n    </label>\r\n    <label>\r\n      Attacker Alliance ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.attacker_alliance_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"attacker_alliance_filter\",\r\n            localSettings.attacker_alliance_filter\r\n          )}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.attacker_corporation_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"attacker_corporation_filter_enabled\",\r\n            localSettings.attacker_corporation_filter_enabled\r\n          )}\r\n      />\r\n      Enable Attacker Corporation Filter\r\n    </label>\r\n    <label>\r\n      Attacker Corporation ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.attacker_corporation_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"attacker_corporation_filter\",\r\n            localSettings.attacker_corporation_filter\r\n          )}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.attacker_ship_type_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"attacker_ship_type_filter_enabled\",\r\n            localSettings.attacker_ship_type_filter_enabled\r\n          )}\r\n      />\r\n      Enable Attacker Ship Type Filter\r\n    </label>\r\n    <label>\r\n      Attacker Ship Type ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.attacker_ship_type_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"attacker_ship_type_filter\",\r\n            localSettings.attacker_ship_type_filter\r\n          )}\r\n      />\r\n    </label>\r\n\r\n    <h3>Victim Filters</h3>\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.victim_alliance_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"victim_alliance_filter_enabled\",\r\n            localSettings.victim_alliance_filter_enabled\r\n          )}\r\n      />\r\n      Enable Victim Alliance Filter\r\n    </label>\r\n    <label>\r\n      Victim Alliance ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.victim_alliance_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"victim_alliance_filter\",\r\n            localSettings.victim_alliance_filter\r\n          )}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.victim_corporation_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"victim_corporation_filter_enabled\",\r\n            localSettings.victim_corporation_filter_enabled\r\n          )}\r\n      />\r\n      Enable Victim Corporation Filter\r\n    </label>\r\n    <label>\r\n      Victim Corporation ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.victim_corporation_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"victim_corporation_filter\",\r\n            localSettings.victim_corporation_filter\r\n          )}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.solar_system_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"solar_system_filter_enabled\",\r\n            localSettings.solar_system_filter_enabled\r\n          )}\r\n      />\r\n      Enable Solar System Filter\r\n    </label>\r\n    <label>\r\n      Solar System ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.solar_system_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"solar_system_filter\",\r\n            localSettings.solar_system_filter\r\n          )}\r\n      />\r\n    </label>\r\n  {/if}\r\n\r\n  <h3>Create New Filter List</h3>\r\n  <div>\r\n    <input bind:value={newListName} placeholder=\"New list name\" />\r\n    <input bind:value={newListIds} placeholder=\"Comma-separated IDs\" />\r\n    <label>\r\n      <input type=\"checkbox\" bind:checked={newListIsExclude} />\r\n      Exclude\r\n    </label>\r\n    <select bind:value={newListFilterType}>\r\n      <option value=\"\">Select filter type</option>\r\n      <option value=\"attacker_alliance\">Attacker Alliance</option>\r\n      <option value=\"attacker_corporation\">Attacker Corporation</option>\r\n      <option value=\"attacker_ship_type\">Attacker Ship Type</option>\r\n      <option value=\"victim_alliance\">Victim Alliance</option>\r\n      <option value=\"victim_corporation\">Victim Corporation</option>\r\n      <option value=\"ship_type\">Ship Type</option>\r\n      <option value=\"solar_system\">Solar System</option>\r\n    </select>\r\n    <button on:click={createFilterList}>Create New List</button>\r\n  </div>\r\n\r\n  <FilterListManager on:updateFilterLists={handleFilterListsUpdate} />\r\n</div>\r\n\r\n<style>\r\n  .settings-manager {\r\n    margin-top: 20px;\r\n    text-align: left;\r\n  }\r\n\r\n  label {\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  input[type=\"number\"] {\r\n    width: 100px;\r\n  }\r\n\r\n  h3 {\r\n    margin-top: 20px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  button {\r\n    margin-top: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  select {\r\n    margin-top: 5px;\r\n  }\r\n</style>\r\n","<script>\r\n  import { onMount } from 'svelte';\r\n  import * as THREE from 'three';\r\n  import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\n  export let killmailId;\r\n\r\n  let container;\r\n\r\n  // Function to fetch celestial data based on the killmail ID\r\n  async function fetchCelestials(killmailId) {\r\n    const response = await fetch(`/api/celestials/${killmailId}`);\r\n    return await response.json();\r\n  }\r\n\r\n  // Function to initialize the Three.js scene and add objects\r\n  function initVisualization(celestials) {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, container.clientWidth / container.clientHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer();\r\n\r\n    renderer.setSize(container.clientWidth, container.clientHeight);\r\n    container.appendChild(renderer.domElement);\r\n\r\n    // Initialize OrbitControls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n    // Add celestials to the scene\r\n    celestials.forEach(celestial => {\r\n      const geometry = new THREE.SphereGeometry(0.1, 32, 32);\r\n      const material = new THREE.MeshBasicMaterial({ color: 0x0000ff });\r\n      const sphere = new THREE.Mesh(geometry, material);\r\n      sphere.position.set(celestial.x, celestial.y, celestial.z);\r\n      scene.add(sphere);\r\n    });\r\n\r\n    // Add the killmail position marker\r\n    const killmailGeometry = new THREE.SphereGeometry(0.2, 32, 32);\r\n    const killmailMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\n    const killmailSphere = new THREE.Mesh(killmailGeometry, killmailMaterial);\r\n    killmailSphere.position.set(celestials[0].killmail_x, celestials[0].killmail_y, celestials[0].killmail_z);\r\n    scene.add(killmailSphere);\r\n\r\n    // Set initial camera position\r\n    camera.position.z = 5;\r\n\r\n    // Animation loop to render the scene and update controls\r\n    function animate() {\r\n      requestAnimationFrame(animate);\r\n      controls.update(); // Update controls on each frame\r\n      renderer.render(scene, camera);\r\n    }\r\n    animate();\r\n  }\r\n\r\n  // Fetch data and initialize the visualization on component mount\r\n  onMount(async () => {\r\n    const celestials = await fetchCelestials(killmailId);\r\n    initVisualization(celestials);\r\n  });\r\n</script>\r\n\r\n<!-- Container for the Three.js canvas -->\r\n<div bind:this={container} style=\"width: 100%; height: 400px;\"></div>\r\n","<script>\r\n  import { filteredKillmails } from \"./store\";\r\n  import MapVisualization from \"./MapVisualization.svelte\";\r\n  import { onMount } from 'svelte';\r\n\r\n  let selectedKillmailId = null;\r\n  let scrollContainer;\r\n  let isUserScrolling = false;\r\n  let shouldAutoScroll = true;\r\n\r\n  function viewMap(killID) {\r\n    selectedKillmailId = killID;\r\n  }\r\n\r\n  function formatDroppedValue(value) {\r\n    if (value === 0 || isNaN(value) || value === null || value === undefined) return \"0 K\";\r\n    const magnitude = Math.floor(Math.log10(value) / 3);\r\n    const scaled = value / Math.pow(1000, magnitude);\r\n    return scaled.toFixed(2) + [\"\", \"K\", \"M\", \"B\", \"T\"][magnitude];\r\n  }\r\n\r\n  function calculateTimeDifference(killmailTime) {\r\n    const now = new Date();\r\n    const killTime = new Date(killmailTime);\r\n    const diff = now - killTime;\r\n    const seconds = Math.floor(diff / 1000);\r\n    if (seconds < 60) return `${seconds} seconds ago`;\r\n    if (seconds < 3600) return `${Math.floor(seconds / 60)} minutes ago`;\r\n    if (seconds < 86400) return `${Math.floor(seconds / 3600)} hours ago`;\r\n    return `${Math.floor(seconds / 86400)} days ago`;\r\n  }\r\n\r\n  function handleScroll() {\r\n    if (!isUserScrolling) {\r\n      isUserScrolling = true;\r\n      setTimeout(() => isUserScrolling = false, 150);\r\n    }\r\n\r\n    const { scrollTop, scrollHeight, clientHeight } = scrollContainer;\r\n    shouldAutoScroll = scrollTop + clientHeight >= scrollHeight - 5;\r\n  }\r\n\r\n  function scrollToBottom() {\r\n    if (scrollContainer && shouldAutoScroll) {\r\n      scrollContainer.scrollTop = scrollContainer.scrollHeight;\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    scrollToBottom();\r\n  });\r\n\r\n  $: if ($filteredKillmails && !isUserScrolling) {\r\n    setTimeout(scrollToBottom, 0);\r\n  }\r\n</script>\r\n\r\n<div class=\"killmail-viewer\">\r\n  <h2>Killmails from the last 24 hours</h2>\r\n  <div class=\"table-container\">\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Dropped Value</th>\r\n          <th>Occurred</th>\r\n          <th>URL</th>\r\n          <th>Map</th>\r\n        </tr>\r\n      </thead>\r\n    </table>\r\n    <div class=\"scroll-box\" bind:this={scrollContainer} on:scroll={handleScroll}>\r\n      <table>\r\n        <tbody>\r\n          {#each $filteredKillmails as killmail}\r\n            <tr>\r\n              <td>{formatDroppedValue(killmail.zkb.droppedValue)}</td>\r\n              <td>{calculateTimeDifference(killmail.killmail.killmail_time)}</td>\r\n              <td><a href={`https://zkillboard.com/kill/${killmail.killID}/`} target=\"_blank\">View</a></td>\r\n              <td><button on:click={() => viewMap(killmail.killID)}>Map</button></td>\r\n            </tr>\r\n          {/each}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  {#if selectedKillmailId}\r\n    <MapVisualization killmailId={selectedKillmailId} />\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .killmail-viewer {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .table-container {\r\n    position: relative;\r\n    border: 1px solid #ddd;\r\n  }\r\n\r\n  .scroll-box {\r\n    height: 400px;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n\r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n\r\n  thead {\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #f2f2f2;\r\n    z-index: 1;\r\n  }\r\n\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n</style>","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  let username = '';\r\n  let password = '';\r\n  let error = '';\r\n  let successMessage = '';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  async function handleSubmit() {\r\n      const response = await fetch('/api/login', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n          dispatch('login', { username });\r\n          successMessage = 'Login successful!';\r\n          error = ''; // Clear any previous errors\r\n      } else {\r\n          error = data.message;\r\n          successMessage = ''; // Clear any previous success messages\r\n      }\r\n  }\r\n\r\n  async function handleRegister() {\r\n      const response = await fetch('/api/register', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n          successMessage = 'Registration successful! Logging in...';\r\n          error = ''; // Clear any previous errors\r\n          handleSubmit(); // Automatically log in after registration\r\n      } else {\r\n          error = data.message;\r\n          successMessage = ''; // Clear any previous success messages\r\n      }\r\n  }\r\n</script>\r\n\r\n<div>\r\n  <h2>Login</h2>\r\n  <form on:submit|preventDefault={handleSubmit}>\r\n      <input type=\"text\" bind:value={username} placeholder=\"Username\" required>\r\n      <input type=\"password\" bind:value={password} placeholder=\"Password\" required>\r\n      <button type=\"submit\">Login</button>\r\n      <button type=\"button\" on:click={handleRegister}>Register</button>\r\n  </form>\r\n  {#if error}\r\n      <p class=\"error\">{error}</p>\r\n  {/if}\r\n  {#if successMessage}\r\n      <p class=\"success\">{successMessage}</p>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  div {\r\n      max-width: 300px;\r\n      margin: 0 auto;\r\n  }\r\n\r\n  input {\r\n      display: block;\r\n      width: 100%;\r\n      margin-bottom: 10px;\r\n      padding: 5px;\r\n  }\r\n\r\n  button {\r\n      margin-right: 10px;\r\n  }\r\n\r\n  .error {\r\n      color: red;\r\n  }\r\n\r\n  .success {\r\n      color: green;\r\n  }\r\n</style>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import socket from \"./socket.js\";\r\n  import SettingsManager from \"./SettingsManager.svelte\";\r\n  import KillmailViewer from \"./KillmailViewer.svelte\";\r\n  import { killmails, settings, filterLists, profiles } from \"./store\";\r\n  import Login from \"./Login.svelte\";\r\n\r\n  let loggedIn = false;\r\n  let username = \"\";\r\n  let settingsManagerComponent;\r\n\r\n  // Subscribe to stores\r\n  $: userSettings = $settings;\r\n  $: kills = $killmails;\r\n  $: userFilterLists = $filterLists;\r\n  $: userProfiles = $profiles;\r\n\r\n  $: {\r\n    console.log(\"App.svelte - userProfiles updated:\", userProfiles);\r\n  }\r\n\r\n  // Function to clear all kills\r\n  function clearAllKills() {\r\n    killmails.set([]);\r\n    socket.emit(\"clearKills\");\r\n  }\r\n\r\n  // Handle login event from Login.svelte\r\n  function handleLogin(event) {\r\n    username = event.detail.username;\r\n    loggedIn = true;\r\n    socket.emit(\"login\", { username, password: event.detail.password });\r\n  }\r\n\r\n  // Lifecycle hook\r\n  onMount(() => {\r\n    console.log(\"App.svelte - onMount\");\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"App.svelte - Connected to server\");\r\n    });\r\n\r\n    socket.on(\"disconnect\", () => {\r\n      console.log(\"App.svelte - Disconnected from server\");\r\n    });\r\n\r\n    socket.on(\"initialData\", (data) => {\r\n      console.log(\"App.svelte - Received initialData:\", data);\r\n      killmails.set(data.killmails);\r\n      settings.set(data.settings);\r\n      filterLists.set(data.filterLists);\r\n      profiles.set(data.profiles);\r\n      console.log(\"App.svelte - Stores updated with initial data\");\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"connect\");\r\n      socket.off(\"disconnect\");\r\n      socket.off(\"initialData\");\r\n    };\r\n  });\r\n</script>\r\n\r\n<main>\r\n  {#if !loggedIn}\r\n    <Login on:login={handleLogin} />\r\n  {:else}\r\n    <div class=\"dashboard\">\r\n      <div class=\"settings-section\">\r\n        <SettingsManager\r\n          bind:this={settingsManagerComponent}\r\n          {userSettings}\r\n          {userFilterLists}\r\n          {userProfiles}\r\n          {socket}\r\n        />\r\n      </div>\r\n      <div class=\"killmail-section\">\r\n        <KillmailViewer {kills} />\r\n        <button on:click={clearAllKills}>Clear All Kills</button>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    text-align: center;\r\n    padding: 1em;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .dashboard {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: calc(100vh - 100px); /* Adjust based on your header height */\r\n  }\r\n\r\n  .settings-section {\r\n    flex: 1;\r\n    overflow-y: auto;\r\n    margin-bottom: 1em;\r\n  }\r\n\r\n  .killmail-section {\r\n    flex: 1;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    .dashboard {\r\n      flex-direction: row;\r\n    }\r\n\r\n    .settings-section,\r\n    .killmail-section {\r\n      width: 50%;\r\n    }\r\n\r\n    .settings-section {\r\n      margin-right: 1em;\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n</style>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n  target: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","callback","undefined","unsub","unsubscribe","component_subscribe","component","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","mounting","i","length","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","current_component","set_current_component","createEventDispatcher","Error","get_current_component","type","detail","cancelable","bubbles","CustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","ensure_array_like","array_like_or_iterator","Array","from","destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","updates","child_ctx","get","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","new_on_destroy","on_mount","map","filter","destroy_component","detaching","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","root","ready","ret","rest","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","this","$on","index","splice","$set","obj","keys","window","__svelte","v","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","Blob","prototype","toString","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","Emitter","mixin","on","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","cb","emit","args","emitReserved","listeners","hasListeners","globalThisShim","self","Function","pick","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","constructor","reason","description","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","prev","seed","num","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","concat","join","empty","hasXHR2","responseType","Request","uri","method","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","replace","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","utf8Length","ceil","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","Socket$1","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","isObject","Decoder","reviver","reconstructor","decodeString","isBinaryEvent","BINARY_EVENT","BINARY_ACK","EVENT","ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","subscriber_queue","stop","subscribers","new_value","run_queue","subscriber","invalidate","killmails","settings","filterLists","profiles","filteredKillmails","stores","initial_value","single","stores_array","every","Boolean","auto","started","values","sync","unsubscribers","derived","$killmails","$settings","$filterLists","killmail","enabled","match","filter_type","attackers","attacker","includes","alliance_id","corporation_id","ship_type_id","victim","solar_system_id","is_exclude","dropped_value_enabled","zkb","droppedValue","dropped_value","total_value_enabled","totalValue","total_value","points_enabled","points","npc_only","npc","solo","awox_only","awox","location_filter_enabled","location_filter","locationID","parseInt","ship_type_filter_enabled","ship_type_filter","time_threshold_enabled","killTime","killmail_time","getTime","time_threshold","attacker_alliance_filter_enabled","attacker_alliance_filter","attacker_corporation_filter_enabled","attacker_corporation_filter","attacker_ship_type_filter_enabled","attacker_ship_type_filter","victim_alliance_filter_enabled","victim_alliance_filter","victim_corporation_filter_enabled","victim_corporation_filter","item_type_filter_enabled","item_type_filter","items","item","item_type_id","solar_system_filter_enabled","solar_system_filter","console","log","audio","Audio","t1_value","input_id_value","checked","input_checked_value","label","label_for_value","div","option0","option1","button","t1","t3","t3_value","select_value_value","create_if_block","h2","dispatch","localFilterLists","toggleFilterList","lists","updateFilterList","toggleExclude","find","deleteFilterList","$$invalidate","newFilterList","currentKillmails","audioAlertEnabled","audio_alerts_enabled","play","playSound","profile","loadedSettings","t_value","option_value_value","t","div2","div0","button0","button1","div1","button2","$$props","selectedProfile","newProfileName","label0","input0","label1","input1","label2","input2","h30","label3","input3","label4","input4","label5","input5","label6","input6","label7","input7","label8","input8","label9","input9","label10","input10","label11","input11","label12","input12","label13","input13","label14","input14","label15","input15","label16","input16","label17","input17","h31","label18","input18","label19","input19","label20","input20","label21","input21","label22","input22","label23","input23","h32","label24","input24","label25","input25","label26","input26","label27","input27","label28","input28","label29","input29","h3","option2","option3","option4","option5","option6","option7","newListName","newListIds","newListIsExclude","newListFilterType","updateSetting","s","fetchProfiles","profs","existingIndex","findIndex","currentSettings","currentLists","validLists","newList","fetchedProfiles","deletedId","updatedProfs","localSettings","localProfiles","$profiles","trim","profileData","profileId","container","killmailId","$$value","t0_value","formatDroppedValue","t2_value","calculateTimeDifference","a_href_value","killID","tr","td0","td1","td2","td3","t0","t2","table0","table1","tbody","iterations","isNaN","magnitude","log10","toFixed","killmailTime","diff","seconds","scrollContainer","selectedKillmailId","isUserScrolling","shouldAutoScroll","viewMap","scrollToBottom","scrollTop","scrollHeight","$filteredKillmails","clientHeight","create_if_block_1","form","preventDefault","username","password","successMessage","handleSubmit","response","fetch","body","json","success","main","settingsManagerComponent","loggedIn","userSettings","kills","userFilterLists","userProfiles"],"mappings":"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"}