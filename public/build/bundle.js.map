{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/lib/esm/index.js","../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/transports/webtransport.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../node_modules/socket.io-client/build/esm/url.js","../../node_modules/svelte/src/runtime/store/index.js","../../src/store.js","../../src/socket.js","../../src/FilterListManager.svelte","../../src/SettingsManager.svelte","../../src/MapVisualization.svelte","../../src/KillmailViewer.svelte","../../src/Login.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { writable, derived } from \"svelte/store\";\r\n\r\nexport const killmails = writable([]);\r\nexport const settings = writable({});\r\nexport const filterLists = writable([]);\r\n\r\nexport const filteredKillmails = derived(\r\n  [killmails, settings, filterLists],\r\n  ([$killmails, $settings, $filterLists]) => {\r\n    return $killmails.filter((killmail) => {\r\n      // Apply filter lists\r\n      for (let list of $filterLists) {\r\n        if (!list.enabled) continue;  // Skip disabled filter lists\r\n\r\n        const ids = JSON.parse(list.ids);\r\n        let match = false;\r\n\r\n        switch (list.filter_type) {\r\n          case 'attacker_alliance':\r\n            match = killmail.killmail.attackers.some(attacker => ids.includes(attacker.alliance_id?.toString()));\r\n            break;\r\n          case 'attacker_corporation':\r\n            match = killmail.killmail.attackers.some(attacker => ids.includes(attacker.corporation_id?.toString()));\r\n            break;\r\n          case 'attacker_ship_type':\r\n            match = killmail.killmail.attackers.some(attacker => ids.includes(attacker.ship_type_id?.toString()));\r\n            break;\r\n          case 'victim_alliance':\r\n            match = ids.includes(killmail.killmail.victim.alliance_id?.toString());\r\n            break;\r\n          case 'victim_corporation':\r\n            match = ids.includes(killmail.killmail.victim.corporation_id?.toString());\r\n            break;\r\n          case 'ship_type':\r\n            match = ids.includes(killmail.killmail.victim.ship_type_id?.toString());\r\n            break;\r\n          case 'solar_system':\r\n            match = ids.includes(killmail.killmail.solar_system_id?.toString());\r\n            break;\r\n        }\r\n\r\n        if (list.is_exclude && match) return false;\r\n        if (!list.is_exclude && !match) return false;\r\n      }\r\n\r\n      // Dropped Value Filter\r\n      if (\r\n        $settings.dropped_value_enabled &&\r\n        killmail.zkb.droppedValue < $settings.dropped_value\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Total Value Filter\r\n      if (\r\n        $settings.total_value_enabled &&\r\n        killmail.zkb.totalValue < $settings.total_value\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Points Filter\r\n      if ($settings.points_enabled && killmail.zkb.points < $settings.points) {\r\n        return false;\r\n      }\r\n\r\n      // NPC Only Filter\r\n      if ($settings.npc_only && !killmail.zkb.npc) {\r\n        return false;\r\n      }\r\n\r\n      // Solo Only Filter\r\n      if ($settings.solo && !killmail.zkb.solo) {\r\n        return false;\r\n      }\r\n\r\n      // AWOX Only Filter\r\n      if ($settings.awox_only && !killmail.zkb.awox) {\r\n        return false;\r\n      }\r\n\r\n      // Location Filter\r\n      if (\r\n        $settings.location_filter_enabled &&\r\n        $settings.location_filter &&\r\n        killmail.zkb.locationID !== parseInt($settings.location_filter)\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Ship Type Filter\r\n      if (\r\n        $settings.ship_type_filter_enabled &&\r\n        killmail.killmail.victim.ship_type_id !== $settings.ship_type_filter\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Time Threshold Filter\r\n      if ($settings.time_threshold_enabled) {\r\n        const killTime = new Date(killmail.killmail.killmail_time).getTime();\r\n        const currentTime = new Date().getTime();\r\n        const timeDiff = (currentTime - killTime) / 1000; // Convert to seconds\r\n        if (timeDiff > $settings.time_threshold) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // Attacker Alliance Filter\r\n      if (\r\n        $settings.attacker_alliance_filter_enabled &&\r\n        $settings.attacker_alliance_filter &&\r\n        !killmail.killmail.attackers.some(\r\n          (attacker) =>\r\n            attacker.alliance_id ===\r\n            parseInt($settings.attacker_alliance_filter)\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Attacker Corporation Filter\r\n      if (\r\n        $settings.attacker_corporation_filter_enabled &&\r\n        $settings.attacker_corporation_filter &&\r\n        !killmail.killmail.attackers.some(\r\n          (attacker) =>\r\n            attacker.corporation_id ===\r\n            parseInt($settings.attacker_corporation_filter)\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Attacker Ship Type Filter\r\n      if (\r\n        $settings.attacker_ship_type_filter_enabled &&\r\n        $settings.attacker_ship_type_filter &&\r\n        !killmail.killmail.attackers.some(\r\n          (attacker) =>\r\n            attacker.ship_type_id ===\r\n            parseInt($settings.attacker_ship_type_filter)\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Victim Alliance Filter\r\n      if (\r\n        $settings.victim_alliance_filter_enabled &&\r\n        $settings.victim_alliance_filter &&\r\n        killmail.killmail.victim.alliance_id !==\r\n          parseInt($settings.victim_alliance_filter)\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Victim Corporation Filter\r\n      if (\r\n        $settings.victim_corporation_filter_enabled &&\r\n        $settings.victim_corporation_filter &&\r\n        killmail.killmail.victim.corporation_id !==\r\n          parseInt($settings.victim_corporation_filter)\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Item Type Filter\r\n      if (\r\n        $settings.item_type_filter_enabled &&\r\n        $settings.item_type_filter &&\r\n        !killmail.killmail.victim.items.some(\r\n          (item) => item.item_type_id === parseInt($settings.item_type_filter)\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Solar System Filter\r\n      if (\r\n        $settings.solar_system_filter_enabled &&\r\n        $settings.solar_system_filter &&\r\n        killmail.killmail.solar_system_id !==\r\n          parseInt($settings.solar_system_filter)\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // If all filters pass, include the killmail\r\n      return true;\r\n    });\r\n  }\r\n);\r\n\r\nexport function clearKills() {\r\n  killmails.set([]);\r\n}\r\n\r\nexport function addFilterList(list) {\r\n  filterLists.update(lists => [...lists, list]);\r\n}\r\n\r\nexport function updateFilterList(updatedList) {\r\n  filterLists.update(lists => lists.map(list => list.id === updatedList.id ? updatedList : list));\r\n}\r\n\r\nexport function deleteFilterList(id) {\r\n  filterLists.update(lists => lists.filter(list => list.id !== id));\r\n}","// socket.js\r\nimport { io } from 'socket.io-client';\r\nimport { killmails, settings, filterLists, addFilterList } from './store';\r\n\r\n// Initialize the socket connection to your server\r\nconst socket = io('http://localhost:3000'); // Replace with your actual server URL\r\n\r\n// Handle connection and disconnection events\r\nsocket.on('connect', () => {\r\n  console.log('Connected to server with socket id:', socket.id);\r\n});\r\n\r\nsocket.on('disconnect', () => {\r\n  console.log('Disconnected from server');\r\n});\r\n\r\n// Handle initial data received from the server\r\nsocket.on('initialData', (data) => {\r\n  console.log('Received initialData:', data);\r\n  settings.set(data.settings);\r\n  killmails.set(data.killmails);\r\n  filterLists.set(data.filterLists);\r\n});\r\n\r\n\r\nlet audio = new Audio('audio_files/alert.wav'); \r\n\r\n// Function to play sound for new killmails\r\nfunction playSound() {\r\n  let audioAlertEnabled;\r\n  settings.subscribe(value => {\r\n    audioAlertEnabled = value.audio_alerts_enabled; // Get the current value of audio_alerts_enabled\r\n  });\r\n\r\n  if (audioAlertEnabled) {\r\n    audio.play().catch(err => {\r\n      console.error('Error playing audio:', err);\r\n    });\r\n  }\r\n}\r\n\r\n// Handle filter list creation response\r\nsocket.on('filterListCreated', (newFilterList) => {\r\n  console.log('New filter list created:', newFilterList);\r\n  addFilterList(newFilterList);\r\n});\r\n\r\n// Handle new killmails received from the server\r\nsocket.on('newKillmail', (killmail) => {\r\n  console.log('Received new killmail:', killmail);\r\n  killmails.update(currentKillmails => [...currentKillmails, killmail]); // Update killmails store\r\n  playSound();\r\n});\r\n\r\nexport default socket;\r\n","<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    import { filterLists } from './store.js';\r\n    import socket from './socket.js';\r\n  \r\n    const dispatch = createEventDispatcher();\r\n  \r\n    function toggleFilterList(id) {\r\n      filterLists.update(lists => \r\n        lists.map(list => \r\n          list.id === id ? {...list, enabled: !list.enabled} : list\r\n        )\r\n      );\r\n      updateFilterList(id);\r\n    }\r\n  \r\n    function toggleExclude(id) {\r\n      filterLists.update(lists => \r\n        lists.map(list => \r\n          list.id === id ? {...list, is_exclude: !list.is_exclude} : list\r\n        )\r\n      );\r\n      updateFilterList(id);\r\n    }\r\n  \r\n    function updateFilterList(id) {\r\n      const list = $filterLists.find(l => l.id === id);\r\n      if (list) {\r\n        socket.emit('updateFilterList', list);\r\n        dispatch('updateFilterLists', {filterLists: $filterLists});\r\n      }\r\n    }\r\n  \r\n    function deleteFilterList(id) {\r\n      socket.emit('deleteFilterList', { id });\r\n      filterLists.update(lists => lists.filter(list => list.id !== id));\r\n      dispatch('updateFilterLists', {filterLists: $filterLists});\r\n    }\r\n  </script>\r\n  \r\n  <div class=\"filter-list-manager\">\r\n    <h2>Filter Lists</h2>\r\n    {#if $filterLists.length === 0}\r\n      <p>No filter lists created yet. Create one to get started!</p>\r\n    {:else}\r\n      {#each $filterLists as list (list.id)}\r\n        <div class=\"filter-list-item\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id={`filter-list-${list.id}`}\r\n            checked={list.enabled}\r\n            on:change={() => toggleFilterList(list.id)}\r\n          />\r\n          <label for={`filter-list-${list.id}`}>\r\n            {list.name} ({list.filter_type})\r\n          </label>\r\n          <select \r\n            value={list.is_exclude ? 'exclude' : 'include'} \r\n            on:change={() => toggleExclude(list.id)}\r\n          >\r\n            <option value=\"include\">Include</option>\r\n            <option value=\"exclude\">Exclude</option>\r\n          </select>\r\n          <button on:click={() => deleteFilterList(list.id)}>Delete</button>\r\n        </div>\r\n      {/each}\r\n    {/if}\r\n  </div>\r\n  \r\n  <style>\r\n    .filter-list-manager {\r\n      margin-top: 20px;\r\n      padding: 15px;\r\n      border: 1px solid #ddd;\r\n      border-radius: 5px;\r\n    }\r\n  \r\n    .filter-list-item {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 10px;\r\n    }\r\n  \r\n    .filter-list-item label {\r\n      margin-left: 10px;\r\n      flex-grow: 1;\r\n    }\r\n  \r\n    select, button {\r\n      margin-left: 10px;\r\n    }\r\n  </style>","<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import socket from \"./socket\";\r\n  import { settings, filterLists } from \"./store\";\r\n  import FilterListManager from \"./FilterListManager.svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let localSettings;\r\n  let newListName = '';\r\n  let newListIds = '';\r\n  let newListIsExclude = false;\r\n  let newListFilterType = '';\r\n\r\n  settings.subscribe((value) => {\r\n    localSettings = { ...value };\r\n  });\r\n\r\n  function updateSetting(key, value) {\r\n    localSettings[key] = value;\r\n    settings.set(localSettings);\r\n    socket.emit(\"updateSettings\", localSettings);\r\n  }\r\n\r\n  function createFilterList() {\r\n    const ids = newListIds.split(',').map(id => id.trim());\r\n    socket.emit(\"createFilterList\", { \r\n      name: newListName, \r\n      ids, \r\n      enabled: false, \r\n      is_exclude: newListIsExclude, \r\n      filter_type: newListFilterType \r\n    });\r\n    newListName = '';\r\n    newListIds = '';\r\n    newListIsExclude = false;\r\n    newListFilterType = '';\r\n  }\r\n\r\n  function handleFilterListsUpdate(event) {\r\n    const updatedFilterLists = event.detail.filterLists;\r\n    filterLists.set(updatedFilterLists);\r\n    socket.emit(\"updateFilterLists\", updatedFilterLists);\r\n  }\r\n</script>\r\n\r\n<div class=\"settings-manager\">\r\n  <h2>Settings</h2>\r\n  {#if localSettings}\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.dropped_value_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"dropped_value_enabled\",\r\n            localSettings.dropped_value_enabled\r\n          )}\r\n      />\r\n      Enable Dropped Value Filter\r\n    </label>\r\n    <label>\r\n      Minimum Dropped Value:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.dropped_value}\r\n        on:input={() =>\r\n          updateSetting(\"dropped_value\", localSettings.dropped_value)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.total_value_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"total_value_enabled\",\r\n            localSettings.total_value_enabled\r\n          )}\r\n      />\r\n      Enable Total Value Filter\r\n    </label>\r\n\r\n    <!-- New Item Type ID Filter -->\r\n    <h3>Item Filter</h3>\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.item_type_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"item_type_filter_enabled\",\r\n            localSettings.item_type_filter_enabled\r\n          )}\r\n      />\r\n      Enable Item Type Filter\r\n    </label>\r\n    <label>\r\n      Item Type ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.item_type_filter}\r\n        on:input={() =>\r\n          updateSetting(\"item_type_filter\", localSettings.item_type_filter)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      Minimum Total Value:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.total_value}\r\n        on:input={() => updateSetting(\"total_value\", localSettings.total_value)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.points_enabled}\r\n        on:change={() =>\r\n          updateSetting(\"points_enabled\", localSettings.points_enabled)}\r\n      />\r\n      Enable Points Filter\r\n    </label>\r\n    <label>\r\n      Minimum Points:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.points}\r\n        on:input={() => updateSetting(\"points\", localSettings.points)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.npc_only}\r\n        on:change={() => updateSetting(\"npc_only\", localSettings.npc_only)}\r\n      />\r\n      NPC Only\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.solo}\r\n        on:change={() => updateSetting(\"solo\", localSettings.solo)}\r\n      />\r\n      Solo Only\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.awox_only}\r\n        on:change={() => updateSetting(\"awox_only\", localSettings.awox_only)}\r\n      />\r\n      AWOX Only\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.location_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"location_filter_enabled\",\r\n            localSettings.location_filter_enabled\r\n          )}\r\n      />\r\n      Enable Location Filter\r\n    </label>\r\n    <label>\r\n      Location ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.location_filter}\r\n        on:input={() =>\r\n          updateSetting(\"location_filter\", localSettings.location_filter)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.ship_type_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"ship_type_filter_enabled\",\r\n            localSettings.ship_type_filter_enabled\r\n          )}\r\n      />\r\n      Enable Ship Type Filter\r\n    </label>\r\n    <label>\r\n      Ship Type ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.ship_type_filter}\r\n        on:input={() =>\r\n          updateSetting(\"ship_type_filter\", localSettings.ship_type_filter)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.time_threshold_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"time_threshold_enabled\",\r\n            localSettings.time_threshold_enabled\r\n          )}\r\n      />\r\n      Enable Time Threshold\r\n    </label>\r\n    <label>\r\n      Time Threshold (seconds):\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.time_threshold}\r\n        on:input={() =>\r\n          updateSetting(\"time_threshold\", localSettings.time_threshold)}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.audio_alerts_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"audio_alerts_enabled\",\r\n            localSettings.audio_alerts_enabled\r\n          )}\r\n      />\r\n      Enable Audio Alerts\r\n    </label>\r\n\r\n    <h3>Attacker Filters</h3>\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.attacker_alliance_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"attacker_alliance_filter_enabled\",\r\n            localSettings.attacker_alliance_filter_enabled\r\n          )}\r\n      />\r\n      Enable Attacker Alliance Filter\r\n    </label>\r\n    <label>\r\n      Attacker Alliance ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.attacker_alliance_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"attacker_alliance_filter\",\r\n            localSettings.attacker_alliance_filter\r\n          )}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.attacker_corporation_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"attacker_corporation_filter_enabled\",\r\n            localSettings.attacker_corporation_filter_enabled\r\n          )}\r\n      />\r\n      Enable Attacker Corporation Filter\r\n    </label>\r\n    <label>\r\n      Attacker Corporation ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.attacker_corporation_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"attacker_corporation_filter\",\r\n            localSettings.attacker_corporation_filter\r\n          )}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.attacker_ship_type_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"attacker_ship_type_filter_enabled\",\r\n            localSettings.attacker_ship_type_filter_enabled\r\n          )}\r\n      />\r\n      Enable Attacker Ship Type Filter\r\n    </label>\r\n    <label>\r\n      Attacker Ship Type ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.attacker_ship_type_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"attacker_ship_type_filter\",\r\n            localSettings.attacker_ship_type_filter\r\n          )}\r\n      />\r\n    </label>\r\n\r\n    <h3>Victim Filters</h3>\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.victim_alliance_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"victim_alliance_filter_enabled\",\r\n            localSettings.victim_alliance_filter_enabled\r\n          )}\r\n      />\r\n      Enable Victim Alliance Filter\r\n    </label>\r\n    <label>\r\n      Victim Alliance ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.victim_alliance_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"victim_alliance_filter\",\r\n            localSettings.victim_alliance_filter\r\n          )}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.victim_corporation_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"victim_corporation_filter_enabled\",\r\n            localSettings.victim_corporation_filter_enabled\r\n          )}\r\n      />\r\n      Enable Victim Corporation Filter\r\n    </label>\r\n    <label>\r\n      Victim Corporation ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.victim_corporation_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"victim_corporation_filter\",\r\n            localSettings.victim_corporation_filter\r\n          )}\r\n      />\r\n    </label>\r\n\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        bind:checked={localSettings.solar_system_filter_enabled}\r\n        on:change={() =>\r\n          updateSetting(\r\n            \"solar_system_filter_enabled\",\r\n            localSettings.solar_system_filter_enabled\r\n          )}\r\n      />\r\n      Enable Solar System Filter\r\n    </label>\r\n    <label>\r\n      Solar System ID:\r\n      <input\r\n        type=\"number\"\r\n        bind:value={localSettings.solar_system_filter}\r\n        on:input={() =>\r\n          updateSetting(\r\n            \"solar_system_filter\",\r\n            localSettings.solar_system_filter\r\n          )}\r\n      />\r\n    </label>\r\n\r\n    <h3>Create New Filter List</h3>\r\n    <div>\r\n      <input bind:value={newListName} placeholder=\"New list name\" />\r\n      <input bind:value={newListIds} placeholder=\"Comma-separated IDs\" />\r\n      <label>\r\n        <input type=\"checkbox\" bind:checked={newListIsExclude} />\r\n        Exclude\r\n      </label>\r\n      <select bind:value={newListFilterType}>\r\n        <option value=\"\">Select filter type</option>\r\n        <option value=\"attacker_alliance\">Attacker Alliance</option>\r\n        <option value=\"attacker_corporation\">Attacker Corporation</option>\r\n        <option value=\"attacker_ship_type\">Attacker Ship Type</option>\r\n        <option value=\"victim_alliance\">Victim Alliance</option>\r\n        <option value=\"victim_corporation\">Victim Corporation</option>\r\n        <option value=\"ship_type\">Ship Type</option>\r\n        <option value=\"solar_system\">Solar System</option>\r\n      </select>\r\n      <button on:click={createFilterList}>Create New List</button>\r\n    </div>\r\n    \r\n    <FilterListManager on:updateFilterLists={handleFilterListsUpdate} />\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .settings-manager {\r\n    margin-top: 20px;\r\n    text-align: left;\r\n  }\r\n\r\n  label {\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  input[type=\"number\"]{\r\n    width: 100px;\r\n  }\r\n\r\n  h3 {\r\n    margin-top: 20px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  button {\r\n    margin-top: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  select {\r\n    margin-top: 5px;\r\n  }\r\n</style>\r\n","<script>\r\n  import { onMount } from 'svelte';\r\n  import * as THREE from 'three';\r\n  import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\n  export let killmailId;\r\n\r\n  let container;\r\n\r\n  // Function to fetch celestial data based on the killmail ID\r\n  async function fetchCelestials(killmailId) {\r\n    const response = await fetch(`/api/celestials/${killmailId}`);\r\n    return await response.json();\r\n  }\r\n\r\n  // Function to initialize the Three.js scene and add objects\r\n  function initVisualization(celestials) {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, container.clientWidth / container.clientHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer();\r\n\r\n    renderer.setSize(container.clientWidth, container.clientHeight);\r\n    container.appendChild(renderer.domElement);\r\n\r\n    // Initialize OrbitControls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n    // Add celestials to the scene\r\n    celestials.forEach(celestial => {\r\n      const geometry = new THREE.SphereGeometry(0.1, 32, 32);\r\n      const material = new THREE.MeshBasicMaterial({ color: 0x0000ff });\r\n      const sphere = new THREE.Mesh(geometry, material);\r\n      sphere.position.set(celestial.x, celestial.y, celestial.z);\r\n      scene.add(sphere);\r\n    });\r\n\r\n    // Add the killmail position marker\r\n    const killmailGeometry = new THREE.SphereGeometry(0.2, 32, 32);\r\n    const killmailMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\n    const killmailSphere = new THREE.Mesh(killmailGeometry, killmailMaterial);\r\n    killmailSphere.position.set(celestials[0].killmail_x, celestials[0].killmail_y, celestials[0].killmail_z);\r\n    scene.add(killmailSphere);\r\n\r\n    // Set initial camera position\r\n    camera.position.z = 5;\r\n\r\n    // Animation loop to render the scene and update controls\r\n    function animate() {\r\n      requestAnimationFrame(animate);\r\n      controls.update(); // Update controls on each frame\r\n      renderer.render(scene, camera);\r\n    }\r\n    animate();\r\n  }\r\n\r\n  // Fetch data and initialize the visualization on component mount\r\n  onMount(async () => {\r\n    const celestials = await fetchCelestials(killmailId);\r\n    initVisualization(celestials);\r\n  });\r\n</script>\r\n\r\n<!-- Container for the Three.js canvas -->\r\n<div bind:this={container} style=\"width: 100%; height: 400px;\"></div>\r\n","<script>\r\n  import { filteredKillmails } from \"./store\";\r\n  import MapVisualization from \"./MapVisualization.svelte\";\r\n  import { onMount } from 'svelte';\r\n\r\n  let selectedKillmailId = null;\r\n  let scrollContainer;\r\n  let isUserScrolling = false;\r\n  let shouldAutoScroll = true;\r\n\r\n  function viewMap(killID) {\r\n    selectedKillmailId = killID;\r\n  }\r\n\r\n  function formatDroppedValue(value) {\r\n    if (value === 0 || isNaN(value) || value === null || value === undefined) return \"0 K\";\r\n    const magnitude = Math.floor(Math.log10(value) / 3);\r\n    const scaled = value / Math.pow(1000, magnitude);\r\n    return scaled.toFixed(2) + [\"\", \"K\", \"M\", \"B\", \"T\"][magnitude];\r\n  }\r\n\r\n  function calculateTimeDifference(killmailTime) {\r\n    const now = new Date();\r\n    const killTime = new Date(killmailTime);\r\n    const diff = now - killTime;\r\n    const seconds = Math.floor(diff / 1000);\r\n    if (seconds < 60) return `${seconds} seconds ago`;\r\n    if (seconds < 3600) return `${Math.floor(seconds / 60)} minutes ago`;\r\n    if (seconds < 86400) return `${Math.floor(seconds / 3600)} hours ago`;\r\n    return `${Math.floor(seconds / 86400)} days ago`;\r\n  }\r\n\r\n  function handleScroll() {\r\n    if (!isUserScrolling) {\r\n      isUserScrolling = true;\r\n      setTimeout(() => isUserScrolling = false, 150);\r\n    }\r\n\r\n    const { scrollTop, scrollHeight, clientHeight } = scrollContainer;\r\n    shouldAutoScroll = scrollTop + clientHeight >= scrollHeight - 5;\r\n  }\r\n\r\n  function scrollToBottom() {\r\n    if (scrollContainer && shouldAutoScroll) {\r\n      scrollContainer.scrollTop = scrollContainer.scrollHeight;\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    scrollToBottom();\r\n  });\r\n\r\n  $: if ($filteredKillmails && !isUserScrolling) {\r\n    setTimeout(scrollToBottom, 0);\r\n  }\r\n</script>\r\n\r\n<div class=\"killmail-viewer\">\r\n  <h2>Killmails from the last 24 hours</h2>\r\n  <div class=\"table-container\">\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Dropped Value</th>\r\n          <th>Occurred</th>\r\n          <th>URL</th>\r\n          <th>Map</th>\r\n        </tr>\r\n      </thead>\r\n    </table>\r\n    <div class=\"scroll-box\" bind:this={scrollContainer} on:scroll={handleScroll}>\r\n      <table>\r\n        <tbody>\r\n          {#each $filteredKillmails as killmail}\r\n            <tr>\r\n              <td>{formatDroppedValue(killmail.zkb.droppedValue)}</td>\r\n              <td>{calculateTimeDifference(killmail.killmail.killmail_time)}</td>\r\n              <td><a href={`https://zkillboard.com/kill/${killmail.killID}/`} target=\"_blank\">View</a></td>\r\n              <td><button on:click={() => viewMap(killmail.killID)}>Map</button></td>\r\n            </tr>\r\n          {/each}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  {#if selectedKillmailId}\r\n    <MapVisualization killmailId={selectedKillmailId} />\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .killmail-viewer {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .table-container {\r\n    position: relative;\r\n    border: 1px solid #ddd;\r\n  }\r\n\r\n  .scroll-box {\r\n    height: 400px;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n\r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n\r\n  thead {\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #f2f2f2;\r\n    z-index: 1;\r\n  }\r\n\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n</style>","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  let username = '';\r\n  let password = '';\r\n  let error = '';\r\n  let successMessage = '';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  async function handleSubmit() {\r\n      const response = await fetch('/api/login', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n          dispatch('login', { username });\r\n          successMessage = 'Login successful!';\r\n          error = ''; // Clear any previous errors\r\n      } else {\r\n          error = data.message;\r\n          successMessage = ''; // Clear any previous success messages\r\n      }\r\n  }\r\n\r\n  async function handleRegister() {\r\n      const response = await fetch('/api/register', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n          successMessage = 'Registration successful! Logging in...';\r\n          error = ''; // Clear any previous errors\r\n          handleSubmit(); // Automatically log in after registration\r\n      } else {\r\n          error = data.message;\r\n          successMessage = ''; // Clear any previous success messages\r\n      }\r\n  }\r\n</script>\r\n\r\n<div>\r\n  <h2>Login</h2>\r\n  <form on:submit|preventDefault={handleSubmit}>\r\n      <input type=\"text\" bind:value={username} placeholder=\"Username\" required>\r\n      <input type=\"password\" bind:value={password} placeholder=\"Password\" required>\r\n      <button type=\"submit\">Login</button>\r\n      <button type=\"button\" on:click={handleRegister}>Register</button>\r\n  </form>\r\n  {#if error}\r\n      <p class=\"error\">{error}</p>\r\n  {/if}\r\n  {#if successMessage}\r\n      <p class=\"success\">{successMessage}</p>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  div {\r\n      max-width: 300px;\r\n      margin: 0 auto;\r\n  }\r\n\r\n  input {\r\n      display: block;\r\n      width: 100%;\r\n      margin-bottom: 10px;\r\n      padding: 5px;\r\n  }\r\n\r\n  button {\r\n      margin-right: 10px;\r\n  }\r\n\r\n  .error {\r\n      color: red;\r\n  }\r\n\r\n  .success {\r\n      color: green;\r\n  }\r\n</style>\r\n","<script>\r\n  import socket from './socket.js';\r\n  import { onMount } from 'svelte';\r\n  import SettingsManager from './SettingsManager.svelte';\r\n  import KillmailViewer from './KillmailViewer.svelte';\r\n  import { clearKills, killmails, settings, filterLists } from './store';\r\n  import Login from './Login.svelte';\r\n\r\n  let loggedIn = false;\r\n  let username = '';\r\n\r\n  // Subscribe to stores\r\n  let userSettings = {};\r\n  let kills = [];\r\n  let userFilterLists = [];\r\n\r\n  // Reactive statements for stores\r\n  $: kills = $killmails;\r\n  $: userSettings = $settings;\r\n  $: userFilterLists = $filterLists;\r\n\r\n  // Function to clear all kills\r\n  function clearAllKills() {\r\n    clearKills();\r\n    if (socket) {\r\n      socket.emit('clearKills');\r\n    } else {\r\n      console.error('Socket is not initialized');\r\n    }\r\n  }\r\n\r\n  // Handle login event from Login.svelte\r\n  function handleLogin(event) {\r\n    username = event.detail.username;\r\n    loggedIn = true;\r\n\r\n    if (socket) {\r\n      socket.emit('login', { username, password: event.detail.password });\r\n    } else {\r\n      console.error('Socket is not initialized');\r\n    }\r\n  }\r\n\r\n  // Handle settings update event from SettingsManager\r\n  function updateSettings(event) {\r\n    const newSettings = event.detail;\r\n    if (socket) {\r\n      socket.emit('updateSettings', newSettings);\r\n    } else {\r\n      console.error('Socket is not initialized');\r\n    }\r\n  }\r\n\r\n  // Lifecycle hook\r\n  onMount(() => {\r\n    if (!socket) {\r\n      console.error('Socket is not initialized on mount');\r\n    }\r\n  });\r\n</script>\r\n\r\n<main>\r\n  <h1>KM Hunter</h1>\r\n  \r\n  {#if !loggedIn}\r\n    <Login on:login={handleLogin} />\r\n  {:else}\r\n    <div class=\"dashboard\">\r\n      <div class=\"settings-section\">\r\n        <SettingsManager \r\n          on:updateSettings={updateSettings} \r\n          {userSettings}\r\n          {userFilterLists}\r\n        />\r\n      </div>\r\n      <div class=\"killmail-section\">\r\n        <KillmailViewer {kills}/>\r\n        <button on:click={clearAllKills}>Clear All Kills</button>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    text-align: center;\r\n    padding: 1em;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  h1 {\r\n    color: #ff3e00;\r\n    text-transform: uppercase;\r\n    font-size: 2em;\r\n    font-weight: 100;\r\n    margin-bottom: 0.5em;\r\n  }\r\n\r\n  .dashboard {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: calc(100vh - 100px); /* Adjust based on your header height */\r\n  }\r\n\r\n  .settings-section {\r\n    flex: 1;\r\n    overflow-y: auto;\r\n    margin-bottom: 1em;\r\n  }\r\n\r\n  .killmail-section {\r\n    flex: 1;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    .dashboard {\r\n      flex-direction: row;\r\n    }\r\n\r\n    .settings-section, .killmail-section {\r\n      width: 50%;\r\n    }\r\n\r\n    .settings-section {\r\n      margin-right: 1em;\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n</style>","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n  target: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","callback","undefined","unsub","unsubscribe","component_subscribe","component","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","mounting","i","length","option","__value","selected","selectedIndex","current_component","set_current_component","createEventDispatcher","Error","get_current_component","type","detail","cancelable","bubbles","CustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","ensure_array_like","array_like_or_iterator","Array","from","destroy_block","lookup","create_component","mount_component","m","new_on_destroy","on_mount","map","filter","destroy_component","detaching","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","this","$on","index","splice","$set","obj","keys","window","__svelte","v","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","Blob","prototype","toString","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","Emitter","mixin","on","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","cb","emit","args","emitReserved","listeners","hasListeners","globalThisShim","self","Function","pick","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","constructor","reason","description","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","prev","seed","num","Math","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","concat","join","empty","hasXHR2","responseType","Request","uri","method","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","replace","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","utf8Length","ceil","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","Socket$1","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","isObject","Decoder","reviver","reconstructor","decodeString","isBinaryEvent","BINARY_EVENT","BINARY_ACK","EVENT","ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","subscriber_queue","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","killmails","settings","filterLists","filteredKillmails","stores","initial_value","single","stores_array","every","Boolean","auto","started","values","sync","unsubscribers","derived","$killmails","$settings","$filterLists","killmail","list","enabled","match","filter_type","attackers","attacker","includes","alliance_id","corporation_id","ship_type_id","victim","solar_system_id","is_exclude","dropped_value_enabled","zkb","droppedValue","dropped_value","total_value_enabled","totalValue","total_value","points_enabled","points","npc_only","npc","solo","awox_only","awox","location_filter_enabled","location_filter","locationID","parseInt","ship_type_filter_enabled","ship_type_filter","time_threshold_enabled","killTime","killmail_time","getTime","time_threshold","attacker_alliance_filter_enabled","attacker_alliance_filter","attacker_corporation_filter_enabled","attacker_corporation_filter","attacker_ship_type_filter_enabled","attacker_ship_type_filter","victim_alliance_filter_enabled","victim_alliance_filter","victim_corporation_filter_enabled","victim_corporation_filter","item_type_filter_enabled","item_type_filter","items","item","item_type_id","solar_system_filter_enabled","solar_system_filter","console","log","audio","Audio","get_key","old_blocks","dynamic","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","get","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","t1_value","t3_value","input_id_value","checked","input_checked_value","label","label_for_value","div","option0","option1","button","t1","t3","select_value_value","create_if_block","h2","dispatch","toggleFilterList","lists","updateFilterList","toggleExclude","find","deleteFilterList","newFilterList","currentKillmails","audioAlertEnabled","audio_alerts_enabled","play","playSound","label0","input0","label1","input1","label2","input2","h30","label3","input3","label4","input4","label5","input5","label6","input6","label7","input7","label8","input8","label9","input9","label10","input10","label11","input11","label12","input12","label13","input13","label14","input14","label15","input15","label16","input16","label17","input17","h31","label18","input18","label19","input19","label20","input20","label21","input21","label22","input22","label23","input23","h32","label24","input24","label25","input25","label26","input26","label27","input27","label28","input28","label29","input29","h33","input30","input31","label30","input32","option2","option3","option4","option5","option6","option7","localSettings","newListName","newListIds","newListIsExclude","newListFilterType","updateSetting","$$invalidate","trim","updatedFilterLists","selected_option","querySelector","select_value","container","killmailId","$$props","$$value","t0_value","formatDroppedValue","t2_value","calculateTimeDifference","a_href_value","killID","tr","td0","td1","td2","td3","t0","t2","div2","div1","table0","div0","table1","tbody","iterations","isNaN","magnitude","log10","toFixed","killmailTime","diff","seconds","scrollContainer","selectedKillmailId","isUserScrolling","shouldAutoScroll","viewMap","scrollToBottom","scrollTop","scrollHeight","$filteredKillmails","clientHeight","create_if_block_1","form","button0","button1","preventDefault","username","password","successMessage","handleSubmit","response","fetch","body","json","success","main","h1","loggedIn","userSettings","kills","userFilterLists","newSettings"],"mappings":"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"}